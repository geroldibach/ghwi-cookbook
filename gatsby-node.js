const path = require('path')
const { createFilePath } = require('gatsby-source-filesystem')

const RecipeTemplate = path.resolve('./src/templates/recipe-template.js')
const RecipeNavTemplate = path.resolve('./src/templates/recipe-nav-template.js')

exports.onCreateNode = ({node, getNode, actions}) => {
  const {createNodeField} = actions
  if (node.internal.type === 'MarkdownRemark') {
    const slug = createFilePath({node, getNode, basePath: 'recipes'})
    createNodeField({
      node,
      name: 'slug',
      value: slug
    })
  }
}

exports.createPages =  async ({ graphql, actions}) => {
  const { createPage } = actions

const resultRecipes =  await graphql(`{
  allMarkdownRemark(filter: {fileAbsolutePath: {regex: "/(recipes)/"  }}) {
    edges {
      node {
        fields {
          slug
        }
      }
    }
  }
}
`)

const recipes = resultRecipes.data.allMarkdownRemark.edges
recipes.forEach(({ node: recipe}) => {  //destructure node and rename it to recipe
  createPage({
    path: `recipes${recipe.fields.slug}`,
    component: RecipeTemplate,
    context: {
      slug: recipe.fields.slug
    }
  })
})

// navigation pages recipes
const recipesPerPage = 2
const totalPagesRecipes = Math.ceil(recipes.length / recipesPerPage)
recipes.forEach((_, index) => {
  const currentPage = index + 1
  const isFirstPage = index === 0
  const isLastPage = currentPage === totalPagesRecipes
  createPage({
    path: isFirstPage ? '/recipenav' : `/recipenav/${currentPage}`,
    component: RecipeNavTemplate,
    context: {
      limit: recipesPerPage,
      skip: index * recipesPerPage,
      isFirstPage,
      isLastPage,
      currentPage,
      totalPagesRecipes
    }

  })
})



}

// const path = require("path")
// // In your gatsby-node.js file

// exports.createPages = async ({ graphql, actions, reporter }) => {
//   // Destructure the createPage function from the actions object
//   const { createPage } = actions

//   const result = await graphql(`
//     query {
//       allMarkdownRemark {
//         edges {
//           node {
//             frontmatter {
//               title
//             }
//             id
//             fileAbsolutePath
//           }
//         }
//       }
//     }
//   `)

//   console.log('result', result)

//   if (result.errors) {
//     reporter.panicOnBuild('ðŸš¨  ERROR: Loading "createPages" query')
//   }

//   // Create blog post pages.
//   const recipes = result.data.allMarkdownRemark.edges

//   // you'll call `createPage` for each result
//   recipes.forEach(({ node }, index) => {
//     //let fileName = path.parse(node.fileAbsolutePath).base.replace(/.md$/,'')
//     let fileName = node.fileAbsolutePath.replace(/^.*[\\/]/, '').replace(/\.md$/, '')
//     createPage({
//       // The slug generated by gatsby-plugin-mdx doesn't contain a slash at the beginning
//       // You can prepend it with any prefix you want
//       path: `/recipes/${fileName}`,
//       // This component will wrap our MDX content
//       component: path.resolve(`./src/components/recipe-page-layout-md.js`),
//       //component: blogPostTemplate,
//       // You can use the values in this context in
//       // our page layout component
//       context: { id: node.id },
//     })
//   })
// }