const path = require("path")

exports.createPages = async ({ graphql, actions, reporter }) => {
  // Destructure the createPage function from the actions object
  const { createPage } = actions

  const result = await graphql(`
    query {
      allMarkdownRemark {
        edges {
          node {
            frontmatter {
              title
            }
            id
            fileAbsolutePath
          }
        }
      }
    }
  `)

  console.log('result', result)

  if (result.errors) {
    reporter.panicOnBuild('ðŸš¨  ERROR: Loading "createPages" query')
  }

  // Create blog post pages.
  const recipes = result.data.allMarkdownRemark.edges

  // you'll call `createPage` for each result
  recipes.forEach(({ node }, index) => {
    //let fileName = path.parse(node.fileAbsolutePath).base.replace(/.md$/,'')
    let fileName = node.fileAbsolutePath.replace(/^.*[\\/]/, '').replace(/\.md$/, '')
    createPage({
      // The slug generated by gatsby-plugin-mdx doesn't contain a slash at the beginning
      // You can prepend it with any prefix you want
      path: `/recipes/${fileName}`,
      // This component will wrap our MDX content
      component: path.resolve(`./src/components/recipe-page-layout-md.js`),
      //component: blogPostTemplate,
      // You can use the values in this context in
      // our page layout component
      context: { id: node.id },
    })
  })
}